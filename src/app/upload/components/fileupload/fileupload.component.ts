import {Component, OnInit} from '@angular/core'
import {MessageService} from 'primeng/api'
import {select, Store} from '@ngrx/store'
import {FileUpload, FileUploadModule} from 'primeng/fileupload'
import {Toast, ToastModule} from 'primeng/toast'
import {catchError, fromEvent, map, of, Subscription, switchMap, tap, throwError} from 'rxjs'
import {D3Component} from '../d3/d3.component'
import {ChartActions, loadChartData, loadChartDataSuccess} from '../../store/actions/data.action'
import {ChartState} from '../../types/chart.interface'
import {NgForOf, NgIf} from '@angular/common'
import {ChartData} from '../../types/data.interface'

@Component({
  selector: 'app-file-upload',
  templateUrl: './fileupload.component.html',
  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  imports: [
    FileUpload,   // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –æ—Ç PrimeNG
    Toast,        // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (toast)
    FileUploadModule,
    ToastModule,
    D3Component,
    NgForOf,
    NgIf
  ],
  providers: [MessageService]  // –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
})
export class FileUploadComponent implements OnInit {
  // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  files: ChartData[] | null = null // –•—Ä–∞–Ω–∏–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã

  constructor(
    public messageService: MessageService,  // –°–µ—Ä–≤–∏—Å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    public store: Store<ChartState> // NgRx Store, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Ç–∏–ø–∞ DataItem[])
  ) {
  }

  ngOnInit() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    this.store.dispatch(loadChartData())


  }

  onChildNotify(data: ChartData[]): void {
    this.files = data
    console.log(this.files)
  }

  removeFile(fileId: string) {
    this.files = this.files.filter(file => file.id !== fileId)
    // this.store.dispatch(ChartActions.loadChartDataSuccess({ data: this.files }));
  }


  clearData() {
    this.store.dispatch(ChartActions.clearChartData())
    this.files = [] // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  }

  // –ú–µ—Ç–æ–¥, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ (—Å–æ–±—ã—Ç–∏–µ onUpload –æ—Ç p-fileupload)
  onUpload(event: any) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    const file = event.files[0]

    // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω, –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –∏ –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    if (!file) {
      this.showError('No file selected')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ 5 –ú–ë
    if (file.size > 5 * 1024 * 1024) {
      this.showError('File size exceeds 5MB')
      return
    }

    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä FileReader –¥–ª—è —á—Ç–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞
    const reader = new FileReader()

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–æ–±—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ (load) –≤ –ø–æ—Ç–æ–∫ RxJS —Å –ø–æ–º–æ—â—å—é fromEvent
    fromEvent(reader, 'load')
      .pipe(
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
        map(() => reader.result as string),
        // –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–æ–∫—É –≤ JSON-–æ–±—ä–µ–∫—Ç
        map(text => {
          try {
            return JSON.parse(text)
          } catch (e) {
            throw new Error('Invalid JSON')
          }
        }),
        map(data => ({
          id: `${Math.floor(Math.random() * 100001).toString()}`, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Ñ–∞–π–ª–∞
          name: file.name, // üî• –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
          size: file.size,
          timestamp: new Intl.DateTimeFormat('ru-RU', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
          }).format(new Date()), // –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
          data // –ó–∞–≥—Ä—É–∂–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ data
        })),
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã. –ï—Å–ª–∏ –¥–∞, –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞–ª—å—à–µ, –∏–Ω–∞—á–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        switchMap(data =>
          this.isValidData(data)
            ? of(data)
            : throwError(() => new Error('Invalid data format'))
        ),
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏—Ö –≤ —Ü–µ–ø–æ—á–∫–µ RxJS
        catchError((err) => {
          this.showError(err.message)
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ—Ç–æ–∫, –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          return of(null)
        })
      ).subscribe(data => {
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –∏ –≤–∞–ª–∏–¥–Ω—ã
      if (data) {
        // –î–∏—Å–ø–∞—Ç—á–∏–º —ç–∫—à–µ–Ω –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ NgRx Store
        this.store.dispatch(loadChartDataSuccess({data: data}))
        // –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞
        this.messageService.add({
          severity: 'success',
          summary: 'Success',
          detail: 'File uploaded successfully'
        })
      }
    })

    // –ù–∞—á–∏–Ω–∞–µ–º —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–∞–∫ —Ç–µ–∫—Å—Ç
    reader.readAsText(file)
  }


  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ MessageService
  private showError(detail: string) {
    this.messageService.add({
      severity: 'error', // –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è - –æ—à–∏–±–∫–∞
      summary: 'Error',  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      detail           // –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
    })
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  private isValidData(data: any): boolean {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ –∏–º–µ—é—Ç —Ç–∏–ø "object"
    if (!data || typeof data !== 'object') {
      return false // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false
    }
    return true // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true
  }

}
